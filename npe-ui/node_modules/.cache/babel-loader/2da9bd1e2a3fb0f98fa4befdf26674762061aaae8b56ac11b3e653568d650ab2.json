{"ast":null,"code":"const API_KEY = 'JBVKiTZf2hTv4biYXchKMKfmjDHMB6T8o1cO7j7k';\nconst BASE_URL = 'https://developer.nps.gov/api/v1';\nexport const fetchParksData = async (filters = {}) => {\n  const {\n    location,\n    stateCode\n  } = filters;\n  const url = new URL(`${BASE_URL}/parks`);\n  const params = {\n    api_key: API_KEY,\n    limit: 700\n  };\n  if (location) params.q = location;\n  if (stateCode) params.stateCode = stateCode;\n  url.search = new URLSearchParams(params).toString();\n  const res = await fetch(url);\n  if (!res.ok) throw new Error('Failed to fetch parks');\n  const data = await res.json();\n  return data.data.filter(p => p.designation === 'National Park');\n};\nexport const fetchParkDetails = async parkCode => {\n  const url = `${BASE_URL}/parks?parkCode=${parkCode}&api_key=${API_KEY}`;\n  const res = await fetch(url);\n  if (!res.ok) throw new Error('Failed to fetch park details');\n  const data = await res.json();\n  return data.data[0];\n};\nexport const fetchWebcamData = async parkCode => {\n  const url = `${BASE_URL}/webcams?parkCode=${parkCode}&api_key=${API_KEY}`;\n  const res = await fetch(url);\n  if (!res.ok) throw new Error('Failed to fetch webcam data');\n  const data = await res.json();\n  return data.data;\n};","map":{"version":3,"names":["API_KEY","BASE_URL","fetchParksData","filters","location","stateCode","url","URL","params","api_key","limit","q","search","URLSearchParams","toString","res","fetch","ok","Error","data","json","filter","p","designation","fetchParkDetails","parkCode","fetchWebcamData"],"sources":["/Users/sdpadmin/Desktop/repos/COSC625-Group4Project/npe-ui/src/services/npsApi.js"],"sourcesContent":["const API_KEY = 'JBVKiTZf2hTv4biYXchKMKfmjDHMB6T8o1cO7j7k';\nconst BASE_URL = 'https://developer.nps.gov/api/v1';\n\nexport const fetchParksData = async (filters = {}) => {\n  const { location, stateCode } = filters;\n  const url = new URL(`${BASE_URL}/parks`);\n  const params = {\n    api_key: API_KEY,\n    limit: 700,\n  };\n  if (location) params.q = location;\n  if (stateCode) params.stateCode = stateCode;\n  url.search = new URLSearchParams(params).toString();\n\n  const res = await fetch(url);\n  if (!res.ok) throw new Error('Failed to fetch parks');\n  const data = await res.json();\n\n  return data.data.filter(p => p.designation === 'National Park');\n};\n\nexport const fetchParkDetails = async (parkCode) => {\n  const url = `${BASE_URL}/parks?parkCode=${parkCode}&api_key=${API_KEY}`;\n  const res = await fetch(url);\n  if (!res.ok) throw new Error('Failed to fetch park details');\n  const data = await res.json();\n  return data.data[0];\n};\n\nexport const fetchWebcamData = async (parkCode) => {\n  const url = `${BASE_URL}/webcams?parkCode=${parkCode}&api_key=${API_KEY}`;\n  const res = await fetch(url);\n  if (!res.ok) throw new Error('Failed to fetch webcam data');\n  const data = await res.json();\n  return data.data;\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,0CAA0C;AAC1D,MAAMC,QAAQ,GAAG,kCAAkC;AAEnD,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;EACpD,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGF,OAAO;EACvC,MAAMG,GAAG,GAAG,IAAIC,GAAG,CAAC,GAAGN,QAAQ,QAAQ,CAAC;EACxC,MAAMO,MAAM,GAAG;IACbC,OAAO,EAAET,OAAO;IAChBU,KAAK,EAAE;EACT,CAAC;EACD,IAAIN,QAAQ,EAAEI,MAAM,CAACG,CAAC,GAAGP,QAAQ;EACjC,IAAIC,SAAS,EAAEG,MAAM,CAACH,SAAS,GAAGA,SAAS;EAC3CC,GAAG,CAACM,MAAM,GAAG,IAAIC,eAAe,CAACL,MAAM,CAAC,CAACM,QAAQ,CAAC,CAAC;EAEnD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;EAC5B,IAAI,CAACS,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;EAE7B,OAAOD,IAAI,CAACA,IAAI,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,WAAW,KAAK,eAAe,CAAC;AACjE,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;EAClD,MAAMnB,GAAG,GAAG,GAAGL,QAAQ,mBAAmBwB,QAAQ,YAAYzB,OAAO,EAAE;EACvE,MAAMe,GAAG,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;EAC5B,IAAI,CAACS,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;EAC7B,OAAOD,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;AACrB,CAAC;AAED,OAAO,MAAMO,eAAe,GAAG,MAAOD,QAAQ,IAAK;EACjD,MAAMnB,GAAG,GAAG,GAAGL,QAAQ,qBAAqBwB,QAAQ,YAAYzB,OAAO,EAAE;EACzE,MAAMe,GAAG,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;EAC5B,IAAI,CAACS,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAC3D,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;EAC7B,OAAOD,IAAI,CAACA,IAAI;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}