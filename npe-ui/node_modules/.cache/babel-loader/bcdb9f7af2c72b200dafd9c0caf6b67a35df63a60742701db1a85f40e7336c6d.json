{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // ✅\nimport { useAuth } from \"../context/AuthContext\"; // ✅\n\nconst SignupPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    secretWord: \"\",\n    favoritePark: \"\",\n    profileImage: null\n  });\n  const [parks, setParks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {\n    login\n  } = useAuth(); // ✅ get login function\n  const navigate = useNavigate(); // ✅ for redirecting\n\n  const apiKey = \"wT7qTdbCiApVc0O9U4sDpW0AEFgcfmyB8fHNW42O\";\n\n  // ...keep your useEffect & handlers as-is\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Submitting form:\", formData);\n    let profileImageBase64 = null;\n    if (formData.profileImage) {\n      try {\n        profileImageBase64 = await getBase64(formData.profileImage);\n      } catch (error) {\n        console.error(\"Error converting image:\", error);\n      }\n    }\n    const signupData = {\n      username: formData.email,\n      password: formData.password,\n      secret: formData.secretWord,\n      fav_park: formData.favoritePark,\n      profile_image: profileImageBase64\n    };\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/users`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(signupData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        console.error(\"Error creating user:\", data.error || response.statusText);\n      } else {\n        console.log(\"User created successfully!\", data);\n        login(data.userId); // ✅ store in AuthContext\n        navigate(\"/account\"); // ✅ redirect to account page\n      }\n    } catch (error) {\n      console.error(\"Error submitting signup:\", error);\n    }\n  };\n\n  // ...keep the form and render JSX exactly as-is\n};\n_s(SignupPage, \"zyAWwJHUWP6FmSt+0SFRs4Ahevc=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useAuth","SignupPage","_s","formData","setFormData","email","password","secretWord","favoritePark","profileImage","parks","setParks","loading","setLoading","login","navigate","apiKey","handleSubmit","e","preventDefault","console","log","profileImageBase64","getBase64","error","signupData","username","secret","fav_park","profile_image","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","data","json","ok","statusText","userId","_c","$RefreshReg$"],"sources":["/Users/sdpadmin/Desktop/repos/COSC625-Group4Project/npe-ui/src/pages/SignupPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // ✅\nimport { useAuth } from \"../context/AuthContext\"; // ✅\n\nconst SignupPage = () => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    secretWord: \"\",\n    favoritePark: \"\",\n    profileImage: null,\n  });\n\n  const [parks, setParks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { login } = useAuth(); // ✅ get login function\n  const navigate = useNavigate(); // ✅ for redirecting\n\n  const apiKey = \"wT7qTdbCiApVc0O9U4sDpW0AEFgcfmyB8fHNW42O\";\n\n  // ...keep your useEffect & handlers as-is\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"Submitting form:\", formData);\n\n    let profileImageBase64 = null;\n    if (formData.profileImage) {\n      try {\n        profileImageBase64 = await getBase64(formData.profileImage);\n      } catch (error) {\n        console.error(\"Error converting image:\", error);\n      }\n    }\n\n    const signupData = {\n      username: formData.email,\n      password: formData.password,\n      secret: formData.secretWord,\n      fav_park: formData.favoritePark,\n      profile_image: profileImageBase64,\n    };\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/users`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(signupData),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        console.error(\"Error creating user:\", data.error || response.statusText);\n      } else {\n        console.log(\"User created successfully!\", data);\n\n        login(data.userId); // ✅ store in AuthContext\n        navigate(\"/account\"); // ✅ redirect to account page\n      }\n    } catch (error) {\n      console.error(\"Error submitting signup:\", error);\n    }\n  };\n\n  // ...keep the form and render JSX exactly as-is\n};\n\nexport default SignupPage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,SAASC,OAAO,QAAQ,wBAAwB,CAAC,CAAC;;AAElD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM;IAAEgB;EAAM,CAAC,GAAGd,OAAO,CAAC,CAAC,CAAC,CAAC;EAC7B,MAAMe,QAAQ,GAAGhB,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMiB,MAAM,GAAG,0CAA0C;;EAEzD;;EAEA,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAElB,QAAQ,CAAC;IAEzC,IAAImB,kBAAkB,GAAG,IAAI;IAC7B,IAAInB,QAAQ,CAACM,YAAY,EAAE;MACzB,IAAI;QACFa,kBAAkB,GAAG,MAAMC,SAAS,CAACpB,QAAQ,CAACM,YAAY,CAAC;MAC7D,CAAC,CAAC,OAAOe,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF;IAEA,MAAMC,UAAU,GAAG;MACjBC,QAAQ,EAAEvB,QAAQ,CAACE,KAAK;MACxBC,QAAQ,EAAEH,QAAQ,CAACG,QAAQ;MAC3BqB,MAAM,EAAExB,QAAQ,CAACI,UAAU;MAC3BqB,QAAQ,EAAEzB,QAAQ,CAACK,YAAY;MAC/BqB,aAAa,EAAEP;IACjB,CAAC;IAED,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,QAAQ,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,UAAU;MACjC,CAAC,CAAC;MAEF,MAAMe,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElC,IAAI,CAACX,QAAQ,CAACY,EAAE,EAAE;QAChBtB,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEgB,IAAI,CAAChB,KAAK,IAAIM,QAAQ,CAACa,UAAU,CAAC;MAC1E,CAAC,MAAM;QACLvB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEmB,IAAI,CAAC;QAE/C1B,KAAK,CAAC0B,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC;QACpB7B,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;MACxB;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;;EAED;AACF,CAAC;AAACtB,EAAA,CA9DID,UAAU;EAAA,QAWID,OAAO,EACRD,WAAW;AAAA;AAAA8C,EAAA,GAZxB5C,UAAU;AAgEhB,eAAeA,UAAU;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}